/*
Описание:
Параметр: req — объект запроса, который содержит заголовки HTTP, включая куки.
Получение куки: Функция извлекает строку куки из заголовка Cookie. Если куки отсутствуют, она возвращает null.
Парсинг куки: Строка куки разбивается на отдельные куки, которые затем разделяются на ключи и значения.
Фильтрация: Функция ищет куку с именем queue. Если найдено более одной куки с этим именем, функция возвращает null
(что может указывать на ошибку, поскольку куки с одинаковыми именами не должны существовать).
Возврат значения: Если кука queue найдена, функция возвращает её значение.
Эта функция полезна для получения значения куки, которое может использоваться для отслеживания позиции пользователя в очереди.
*/
export function getQueueCookie(req) {
  let rawCookie = req.headers.get("Cookie");

  if (!rawCookie) return null;

  let res = rawCookie
    .split(";")
    .map((c) => c.split("="))
    .filter(([k, _]) => k === "queue");

  if (res.length > 1) return null;

  return res[0][1];
}


/*Параметры:
* res — объект ответа, к которому добавляется заголовок куки.
* queueCookie — значение, которое будет установлено для куки queue.
* maxAge — максимальное время жизни куки в секундах.
* Установка куки: Функция устанавливает заголовок Set-Cookie в объекте ответа.
Кука queue создается с указанным значением и параметрами:
* path=/: кука доступна для всего сайта.
* Secure: кука передается только по HTTPS.
* HttpOnly: кука недоступна через JavaScript (защита от XSS-атак).
* Max-Age: определяет время жизни куки.
* SameSite=None: позволяет куке отправляться с кросс-сайтовыми запросами.
Эта функция используется для установки куки, которая сохраняет информацию о позиции пользователя в очереди,
что позволяет управлять очередью более эффективно.
*/

export function setQueueCookie(res, queueCookie, maxAge) {
  res.headers.set(
    "Set-Cookie",
    `queue=${queueCookie}; path=/; Secure; HttpOnly; Max-Age=${maxAge}; SameSite=None`
  );
  return res;
}

/*
Вместе эти функции позволяют управлять куками, связанными с очередями пользователей,
обеспечивая возможность как получения, так и установки значений куки. Это особенно полезно в приложениях,
где требуется отслеживание состояния пользователей в очереди, например, в системах бронирования или очередей на услуги.
*/
